participants_tsv: 'config/participants.tsv'


tasks: 
 - rest

#TODO: add hierarchy to group fmriprep and prepdwi config


in_seed_nii: '../fmriprep_20.2.1_bold/sub-{subject}/anat/sub-{subject}_acq-MP2RAGEpostproc_run-1_desc-aparcaseg_dseg.nii.gz'

seeds:
  - lhipp
  - rhipp

seed_labels:
  lhipp: 17
  rhipp: 53



fmriprep_dir: ../fmriprep_20.2.1_bold

#paths are relative to fmriprep dir (version 1.5.4) - can later use pybids to get these 
# when you run fmriprep, required to use:  --output-space T1w 
in_bold_nii: 'sub-{subject}/func/sub-{subject}_task-{task}_space-T1w_desc-preproc_bold.nii.gz'
in_boldref_nii: 'sub-{subject}/func/sub-{subject}_task-{task}__space-T1w_boldref.nii.gz'
in_bold_mask_nii: 'sub-{subject}/func/sub-{subject}_task-{task}_space-T1w_desc-brain_mask.nii.gz'
in_confounds_tsv: 'sub-{subject}/func/sub-{subject}_task-{task}_desc-confounds_timeseries.tsv'
in_t1w_nii: 'sub-{subject}/anat/sub-{subject}_acq-MP2RAGEpostproc_run-1_desc-preproc_T1w.nii.gz'


#this is used in mrtrix to get 5tt_seg
#aparcaseg from freesurfer (or fmriprep indirectly): - #TODO replace this with 5ttgen_fsl processing
in_aparcaseg_nii: '../fmriprep_20.2.1_bold/sub-{subject}/anat/sub-{subject}_acq-MP2RAGEpostproc_run-1_desc-aparcaseg_dseg.nii.gz'


#fyi I just chose these arbitrarily :)  AK
confounds_to_use:
 - white_matter
 - csf
 - trans_x
 - trans_y
 - trans_z
 - rot_x
 - rot_y
 - rot_z

prepdwi_dir: ../snakedwi_dev/results

#paths relative to prepdwi - needs to be preprocessed dwi in T1w space
in_dwi_nii: 'sub-{subject}/dwi/sub-{subject}_space-T1w_res-orig_desc-eddy_dwi.nii.gz'
in_dwi_bval: 'sub-{subject}/dwi/sub-{subject}_space-T1w_res-orig_desc-eddy_dwi.bval'
in_dwi_bvec: 'sub-{subject}/dwi/sub-{subject}_space-T1w_res-orig_desc-eddy_dwi.bvec'
in_dwi_mask_nii: 'sub-{subject}/dwi/sub-{subject}_space-T1w_res-orig_desc-brain_mask.nii.gz'


#this has fsl6 and mrtrix3_RC3
singularity: /project/6050199/akhanf/singularity/bids-apps/khanlab_prepdwi_latest.sif


#tckgen - use 10million if using sift..
ntracts_million: 1


#tckmap: 
stat_tck: 'sum' #sum the fconn over a streamline's points, was used in original Calamante 2013 TWFC paper
stat_vox: 'mean' #take mean over all streamlines at each voxel to get TWFC map 
vox_res_mm: 0.5  #resolution to sample streamlines - can be super-resolved..
